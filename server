import { createServer } from 'node:http';
import { createWriteStream, existsSync, mkdirSync, readFile } from 'node:fs';
import { URL } from 'url';
import path from 'node:path';

const logDir = './logs';
if (!existsSync(logDir)) mkdirSync(logDir);

const getLog = () => {
  const date = new Date().toISOString().split('T')[0];
  return createWriteStream(path.join(logDir, `${date}.log`), { flags: 'a' });
};

const send = (res, code, type, body) => {
  res.writeHead(code, { 'Content-Type': type });
  res.end(body);
};

const srv = createServer((req, res) => {
  const url = new URL(req.url, 'http://localhost');

  switch (url.pathname) {
    case '/':
      send(res, 200, 'text/html', '<h1 style="font-size:24px;font-weight:bold;">Selling banana, humans!</h1>');
      break;

    case '/user':
      send(res, 200, 'text/html', '<h1 style="font-size:24px;font-weight:bold;">Joking not bananas</h1>');
      break;

    case '/favicon.ico':
      readFile("C:\\Users\\Fedor\\.vscode\\cli\\favicon.ico", (err, data) => {
        if (err) return send(res, 500, 'text/plain', 'Error loading favicon.ico\n');
        send(res, 200, 'image/x-icon', data);
      });
      break;

    default:
      send(res, 404, 'text/html', '<h1 style="font-size:24px;font-weight:bold;">404 not found</h1>');
  }

  const ip = req.socket.remoteAddress;
  const ua = req.headers['user-agent'] || 'Unknown';
  getLog().write(`Time: ${new Date().toISOString()}, IP: ${ip}, UA: ${ua}\n`);
});

srv.listen(4000, '127.0.0.1', () => {
  console.log('Listening on 127.0.0.1:4000');
});
